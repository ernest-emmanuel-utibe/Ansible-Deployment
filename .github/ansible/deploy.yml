---
- name: Configure and Deploy Spring Boot Application
  hosts: all
  become: yes  # Run tasks with root privileges
  vars:
    spring_boot_version: "3.0.0"  # Spring Boot version
    java_version: "17"  # Java version

  tasks:
    # Install Amazon Corretto 17 on Amazon Linux (RedHat family)
    - name: Install Amazon Corretto 17 on RedHat-based systems
      yum:
        name: java-17-amazon-corretto
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    # Install OpenJDK 17 on Debian-based systems
    - name: Install OpenJDK 17 on Debian-based systems
      apt:
        name: openjdk-17-jdk
        state: present
        update_cache: yes
      when: ansible_facts['os_family'] == "Debian"

    # Create a directory for the Spring Boot application
    - name: Create application directory
      file:
        path: /opt/demo-app
        state: directory
        mode: '0755'

    # Copy the application JAR to the server
    - name: Copy application JAR to server
      copy:
        src: /home/ernest/Downloads/demo/target/demo-0.0.1-SNAPSHOT.jar  # Update with the path to your JAR file
        dest: /opt/demo-app/demo-0.0.1-SNAPSHOT.jar
        mode: '0755'

    # Optionally, copy application.properties if available
    - name: Copy application.properties configuration (if available)
      template:
        src: application.properties.j2  # Path to the Jinja2 template on your local machine
        dest: /opt/demo-app/application.properties
        mode: '0644'
      ignore_errors: yes  # Continue if the file is missing

    # Create a systemd service to manage the Spring Boot application
    - name: Create systemd service for Spring Boot application
      copy:
        dest: /etc/systemd/system/demo-app.service
        content: |
          [Unit]
          Description=Spring Boot Application
          After=syslog.target

          [Service]
          User=ec2-user
          ExecStart=/usr/bin/java -jar /opt/demo-app/demo-0.0.1-SNAPSHOT.jar
          Restart=always

          [Install]
          WantedBy=multi-user.target
      notify:
        - Reload systemd

    # Enable and start the Spring Boot service
    - name: Enable and start the Spring Boot application
      systemd:
        name: demo-app
        state: started
        enabled: yes

  handlers:
    # Reload systemd to recognize the new service
    - name: Reload systemd
      systemd:
        daemon_reload: yes